{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","setPassword","setEmail","emailReg","setEmailReg","setUsername","setFirstName","setLastName","useEffect","$","document","ready","M","updateTextFields","signUpButton","getElementById","signInButton","container","addEventListener","classList","add","remove","className","id","action","type","onChange","e","target","value","for","class","style","color","href","onClick","inputText","preventDefault","console","log","match","fontSize","x","element","querySelector","icon","faFacebook","size","faTwitter","faGoogle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db8cda6b.chunk.js","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport $ from \"jquery\";\nimport M from \"materialize-css\";\nimport {\n  faFacebook,\n  faTwitter,\n  faGoogle,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nfunction App() {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailReg, setEmailReg] = useState(\"\");\n  const [userName, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  useEffect(() => {\n    $(document).ready(function () {\n      M.updateTextFields();\n    });\n\n    const signUpButton = document.getElementById(\"signUp\");\n    const signInButton = document.getElementById(\"signIn\");\n    const container = document.getElementById(\"container\");\n\n    signUpButton.addEventListener(\"click\", () => {\n      container.classList.add(\"right-panel-active\");\n    });\n\n    signInButton.addEventListener(\"click\", () => {\n      container.classList.remove(\"right-panel-active\");\n    });\n  });\n\n  const showPassCondition = (x) => {\n    if (x.type === \"password\") {\n      console.log(x);\n\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  };\n  const showPass = () => {\n    let element = document.querySelector(\".passwd\");\n    showPassCondition(element);\n  };\n\n  const validateEmail = (inputText) => {\n    console.log(inputText);\n    const mailFormat =\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (inputText.match(mailFormat)) {\n      console.log(\"correct\");\n    } else {\n      console.log(\"bad operand\");\n    }\n  };\n  const validateReg = (input) => {\n    if (input.length < 1 || input === \" \") {\n      console.log(\"input cannot be empty or less than two characters\");\n    }\n  };\n\n  const setValues = (e) => {};\n  return (\n    <div className=\"App\">\n      <div className=\"p-container\" id=\"container\">\n        <div className=\"form-container sign-up-container\">\n          <form action=\"#\" className=\"form\">\n            <div className=\"header\">\n              <h1 className=\"h1\">Create Account</h1>\n              <div className=\"error\"></div>\n              {/* <span>or use your email for registration</span> */}\n            </div>\n            <div className=\"input-elements\">\n              <div className=\"input-field \">\n                <input\n                  // placeholder=\"Placeholder\"\n                  id=\"user_name\"\n                  type=\"text\"\n                  // class=\"validate\"\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n                <label for=\"first_name\">Username </label>\n              </div>\n              <div className=\"input-field \">\n                <input\n                  // placeholder=\"Placeholder\"\n                  id=\"first_name\"\n                  type=\"text\"\n                  // class=\"validate\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n                <label for=\"first_name\">First Name</label>\n              </div>\n\n              <div class=\"input-field\">\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  // class=\"validate\"\n                  onChange={(e) => {\n                    setEmailReg(e.target.value);\n                  }}\n                />\n                <label for=\"email\">Email</label>\n              </div>\n              {/* <div class=\"\"> */}\n              <div class=\"input-field\">\n                <input\n                  id=\"lastName\"\n                  type=\"text\"\n                  // class=\"validate\"\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n                <label for=\"password\">Last Name</label>\n              </div>\n\n              {/* </div> */}\n              <span className=\"span\">\n                <label>\n                  <input\n                    className=\"check\"\n                    type=\"checkbox\"\n                    // onClick={showPassReg}\n                  />\n                  <span style={{ color: \"#614D4D  \" }}>\n                    I agree with the <a href=\"#\">Terms Of Use</a>\n                  </span>\n                </label>\n              </span>\n\n              <button\n                className=\"button sign-in-btn \"\n                onClick={(e) => {\n                  e.preventDefault();\n                  validateEmail(emailReg);\n                }}\n              >\n                Sign Up\n              </button>\n            </div>\n          </form>\n        </div>\n        <div class=\"form-container sign-in-container\">\n          <form action=\"#\" className=\"form\">\n            <h1>Sign in</h1>\n\n            <div class=\"input-field\">\n              <input\n                id=\"email\"\n                type=\"email\"\n                // removed validate class from  all the text input fields\n                // class=\"\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label for=\"email\">Email</label>\n            </div>\n            <div class=\"input-field\">\n              <input\n                id=\"password \"\n                type=\"password\"\n                class=\" passwd\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <label for=\"password\">Password</label>\n            </div>\n            <div className=\"show-password\">\n              <a href=\"#\" style={{ fontSize: \"0.9rem\" }}>\n                Forgot your password?\n              </a>{\" \"}\n              <div id=\"togglePassword\">\n                <span className=\"\">\n                  <label>\n                    <input\n                      className=\"small \"\n                      type=\"checkbox\"\n                      // size=\"\"\n                      onClick={showPass}\n                    />\n                    <span style={{ color: \"#212121\", fontSize: \"0.9rem\" }}>\n                      Show password\n                    </span>\n                  </label>\n                </span>\n                {/* <button className=\"red\"></button> */}\n              </div>\n            </div>\n\n            <button className=\"button\">Sign In</button>\n            <div>\n              <span>or use your account</span>\n            </div>\n            <div class=\"social-container\">\n              <a href=\"#\" class=\"social\">\n                <FontAwesomeIcon icon={[\"far\", \"microsoft\"]} />\n\n                {/* <FontAwesomeIcon icon={faHome} size=\"lg\" /> */}\n                <FontAwesomeIcon icon={faFacebook} size=\"lg\" />\n\n                <i class=\"fab fa-facebook-f\"></i>\n              </a>\n              <a href=\"#\" class=\"social\">\n                <FontAwesomeIcon icon={faTwitter} size=\"lg\" />\n              </a>\n              <a href=\"#\" class=\"social\">\n                <FontAwesomeIcon icon={faGoogle} size=\"lg\" />\n              </a>\n            </div>\n          </form>\n        </div>\n        <div class=\"overlay-container\">\n          <div class=\"overlay\">\n            <div class=\"overlay-panel overlay-let\">\n              <h1>Welcome Back!</h1>\n              <p className=\"p\">\n                To keep connected with us please login with your personal info\n              </p>\n              <button class=\"ghost\" id=\"signIn\" className=\"button\">\n                Sign In\n              </button>\n            </div>\n            <div class=\"overlay-panel overlay-right\">\n              <h1>Hey, There!</h1>\n              <p>Enter your personal details and start journey with us</p>\n              <button class=\"ghost\" id=\"signUp\" className=\"button\">\n                Sign Up\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}